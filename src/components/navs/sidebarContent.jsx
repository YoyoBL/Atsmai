import SignOutBtn from "./signOutBtn";
import SignInBtn from "./signInBtn";
import RegisterBtn from "./registerBtn";
import MenuLink from "./menuLink";
import { format } from "date-fns";
import { getDictionary } from "@/lib/dictionary";
import { auth } from "@/auth";
import Avatar from "../profile/avatar";
import UserName from "./userName";
import ThemeSwitcher from "../themeSwitcher";
import { getTheme } from "@/actions/theme.actions";
import LocaleSwitcher from "../localeSwitcher";
import {
   adminCRMLink,
   protectedLinks as protectedLinksObj,
   publicLinks as publicLinksObj,
} from "@/lib/routes";

const protectedLinks = Object.values(protectedLinksObj);
const publicLinks = Object.values(publicLinksObj);

const SidebarContent = async ({ lang }) => {
   const { menuLinks, common } = await getDictionary(lang);
   const session = await auth();
   const sessionTheme = await getTheme();

   const user = session?.user || null;

   return (
      <div className="flex flex-col gap-3 p-4 w-80 min-h-screen bg-base-200 text-base-content ">
         {/* Sidebar content here */}
         <ul>
            {user?.role === "admin" && (
               <MenuLink link={adminCRMLink} text={menuLinks} />
            )}
            {session
               ? protectedLinks.map((link) => (
                    <MenuLink key={link.title} link={link} text={menuLinks} />
                 ))
               : publicLinks.map((link) => (
                    <MenuLink key={link.title} link={link} text={menuLinks} />
                 ))}
         </ul>
         <ul className="mt-auto grid place-items-center gap-2">
            <div className="w-full md:hidden flex gap-3 justify-around">
               <LocaleSwitcher />
               <ThemeSwitcher sessionTheme={sessionTheme} />
            </div>
            <div className="divider w-full"></div>
            <li>
               {" "}
               <UserName />
            </li>

            {session && (
               <li>
                  <Avatar />
               </li>
            )}
            <li>
               {session ? (
                  <SignOutBtn text={common} />
               ) : (
                  <div className="flex gap-3">
                     <SignInBtn text={common} />
                     <RegisterBtn text={common} />
                  </div>
               )}
            </li>
            <li className="text-xs text-opacity-50 pt-5">
               Generated by Yoel Bar-Lev
            </li>
         </ul>
      </div>
   );
};

export default SidebarContent;
